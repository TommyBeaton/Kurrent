name: Release Development Workflow

on:
  pull_request_target:
    branches:
      - development
      - main
    types: [closed]

jobs:
  call-run-unit-tests:
    uses: ./.github/workflows/run-unit-tests.yml

  build-and-push-docker-image:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    env:
      environment: ${{ github.ref == 'refs/heads/main' && 'latest' || 'preview' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: 🔑 Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./src/Dockerfile
          push: true
          tags: |
            tommybeaton/kurrent:${{ env.environment }}-${{ github.run_number }}

      - name: 🏗️ Build and 📤 Push K8s Image 🛥️
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./src/Dockerfile
          push: true
          tags: |
            tommybeaton/kurrent:${{ env.environment }}-k8s-${{ github.run_number }}
          build-args: ASPNETCORE_ENVIRONMENT=k8s

  release-kustomization:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Prepare Kustomize File
        run: |
          sed -i "s|image: tommybeaton/kurrent:.*|image: tommybeaton/kurrent:latest-k8s-${{ inputs.version }}|" ./kustomize/base/deployment.yaml

      - name: Build Manifest
        run: kustomize build kustomize/base > release-kurrent.yaml

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          files: release-kurrent.yaml
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}